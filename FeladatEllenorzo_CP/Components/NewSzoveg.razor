@using System.Text.Json;
@inject GlobalData data
<form class="form-control" method="dialog">
	<label for="tipus">A szöveg típusa</label>
	<select class="form-select" id="tipus" @bind=selectedType>
		<option disabled selected>Válaszd ki a szöveg típusát...</option>
		<option value="poz">pozitív</option>
		<option value="neg">negatív</option>
	</select>
	<label for="text">A szöveg:</label>
	<input id="text" placeholder="A szöveg" class="form-control" @bind-value=Text/>
	<button type="submit" @onclick=Save>Mentés</button>
	<button type="reset" @onclick=@(()=>SaveText.InvokeAsync())>Mégsem</button>
</form>
@code {
	[Parameter] public EventCallback SaveText { get; set; }
	[Parameter] public DataSzoveg szoveg { get; set; }
	string selectedType,Text;
	bool editing = false;
	string path = Path.Combine(FileSystem.Current.AppDataDirectory, "szoveg.json");
	protected override void OnParametersSet()
	{
		if (szoveg is not null)
		{
			editing = true;
			selectedType = szoveg.Type;
			Text = szoveg.Text;
		}
		base.OnParametersSet();
	}
	List<DataSzoveg> dataSzoveg = new();
	void Save()
	{
		if (editing)
		{
			var updateSzoveg = data.Szovegek.FirstOrDefault(s => s.Equals(szoveg));
			updateSzoveg.Type = selectedType;
			updateSzoveg.Text = Text;
		}
		else
			data.Szovegek.Add(new DataSzoveg() { Type = selectedType, Text = Text });
		var text = JsonSerializer.Serialize(data.Szovegek);
		using (StreamWriter sw = new StreamWriter(path))
		{
			sw.WriteLine(text);
		}
		SaveText.InvokeAsync();
	}
}
